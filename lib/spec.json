{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://resource-groups.amazonaws.com/"
        },
        {
            "url": "http://resource-groups.amazonaws.com/"
        }
    ],
    "x-hasEquivalentPaths": true,
    "info": {
        "contact": {
            "email": "mike.ralphson@gmail.com",
            "name": "Mike Ralphson",
            "url": "https://github.com/mermade/aws2openapi",
            "x-twitter": "PermittedSoc"
        },
        "description": "<fullname>AWS Resource Groups</fullname> <p>AWS Resource Groups lets you organize AWS resources such as Amazon EC2 instances, Amazon Relational Database Service databases, and Amazon S3 buckets into groups using criteria that you define as tags. A resource group is a collection of resources that match the resource types specified in a query, and share one or more tags or portions of tags. You can create a group of resources based on their roles in your cloud infrastructure, lifecycle stages, regions, application layers, or virtually any criteria. Resource groups enable you to automate management tasks, such as those in AWS Systems Manager Automation documents, on tag-related resources in AWS Systems Manager. Groups of tagged resources also let you quickly view a custom console in AWS Systems Manager that shows AWS Config compliance and other monitoring data about member resources.</p> <p>To create a resource group, build a resource query, and specify tags that identify the criteria that members of the group have in common. Tags are key-value pairs.</p> <p>For more information about Resource Groups, see the <a href=\"https://docs.aws.amazon.com/ARG/latest/userguide/welcome.html\">AWS Resource Groups User Guide</a>.</p> <p>AWS Resource Groups uses a REST-compliant API that you can use to perform the following types of operations.</p> <ul> <li> <p>Create, Read, Update, and Delete (CRUD) operations on resource groups and resource query entities</p> </li> <li> <p>Applying, editing, and removing tags from resource groups</p> </li> <li> <p>Resolving resource group member ARNs so they can be returned as search results</p> </li> <li> <p>Getting data about resources that are members of a group</p> </li> <li> <p>Searching AWS resources based on a resource query</p> </li> </ul>",
        "license": {
            "name": "Apache 2.0 License",
            "url": "http://www.apache.org/licenses/"
        },
        "termsOfService": "https://aws.amazon.com/service-terms/",
        "title": "AWS Resource Groups",
        "version": "2017-11-27",
        "x-apiClientRegistration": {
            "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
        },
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "backgroundColor": "#FFFFFF",
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
        },
        "x-origin": [
            {
                "contentType": "application/json",
                "converter": {
                    "url": "https://github.com/mermade/aws2openapi",
                    "version": "1.0.0"
                },
                "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/resource-groups-2017-11-27.normal.json",
                "x-apisguru-direct": true
            }
        ],
        "x-preferred": true,
        "x-providerName": "amazonaws.com",
        "x-release": "v4",
        "x-serviceName": "resource-groups"
    },
    "externalDocs": {
        "description": "Amazon Web Services documentation",
        "url": "https://docs.aws.amazon.com/resource-groups/"
    },
    "security": [
        {
            "hmac": []
        }
    ],
    "paths": {
        "/groups": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a group with a specified name, description, and resource query.",
                "operationId": "CreateGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Group": {
                                            "description": "A full description of the resource group after it is created.",
                                            "properties": {
                                                "Description": {
                                                    "description": "The description of the resource group.",
                                                    "maxLength": 512,
                                                    "pattern": "[\\sa-zA-Z0-9_\\.-]*",
                                                    "type": "string"
                                                },
                                                "GroupArn": {
                                                    "description": "The ARN of a resource group.",
                                                    "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of a resource group.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[a-zA-Z0-9_\\.-]+",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "GroupArn",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "ResourceQuery": {
                                            "description": "The resource query associated with the group.",
                                            "properties": {
                                                "Query": {
                                                    "description": "The query that defines a group or a search.",
                                                    "maxLength": 2048,
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "<p>The type of the query. The valid values in this release are <code>TAG_FILTERS_1_0</code> and <code>CLOUDFORMATION_STACK_1_0</code>.</p> <p> <i> <code>TAG_FILTERS_1_0:</code> </i> A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html\">GetResources</a> operation. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches <i>any</i> of the specified values.</p> <p>For example, consider the following sample query for resources that have two tags, <code>Stage</code> and <code>Version</code>, with two values each. (<code>[{\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]},{\"Key\":\"Version\",\"Values\":[\"1\",\"2\"]}]</code>) The results of this query might include the following.</p> <ul> <li> <p>An EC2 instance that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"2\"]}</code> </p> </li> <li> <p>An S3 bucket that has the following two tags: {\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]}, and {\"Key\":\"Version\",\"Values\":[\"1\"]}</p> </li> </ul> <p>The query would not return the following results, however. The following EC2 instance does not have all tag keys specified in the filter, so it is rejected. The RDS database has all of the tag keys, but no values that match at least one of the specified tag key values in the filter.</p> <ul> <li> <p>An EC2 instance that has only the following tag: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>.</p> </li> <li> <p>An RDS database that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Archived\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"4\"]}</code> </p> </li> </ul> <p> <i> <code>CLOUDFORMATION_STACK_1_0:</code> </i> A JSON syntax that lets you specify a CloudFormation stack ARN.</p>",
                                                    "enum": [
                                                        "TAG_FILTERS_1_0",
                                                        "CLOUDFORMATION_STACK_1_0"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Type",
                                                "Query"
                                            ],
                                            "type": "object"
                                        },
                                        "Tags": {
                                            "description": "The tags associated with the group.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "MethodNotAllowedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Description": {
                                        "description": "The description of the resource group. Descriptions can have a maximum of 511 characters, including letters, numbers, hyphens, underscores, punctuation, and spaces.",
                                        "maxLength": 512,
                                        "pattern": "[\\sa-zA-Z0-9_\\.-]*",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "description": "The name of the group, which is the identifier of the group in other operations. A resource group name cannot be updated after it is created. A resource group name can have a maximum of 128 characters, including letters, numbers, hyphens, dots, and underscores. The name cannot start with <code>AWS</code> or <code>aws</code>; these are reserved. A resource group name must be unique within your account.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_\\.-]+",
                                        "type": "string"
                                    },
                                    "ResourceQuery": {
                                        "description": "The resource query that determines which AWS resources are members of this group.",
                                        "properties": {
                                            "Query": {
                                                "description": "The query that defines a group or a search.",
                                                "maxLength": 2048,
                                                "type": "string"
                                            },
                                            "Type": {
                                                "description": "<p>The type of the query. The valid values in this release are <code>TAG_FILTERS_1_0</code> and <code>CLOUDFORMATION_STACK_1_0</code>.</p> <p> <i> <code>TAG_FILTERS_1_0:</code> </i> A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html\">GetResources</a> operation. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches <i>any</i> of the specified values.</p> <p>For example, consider the following sample query for resources that have two tags, <code>Stage</code> and <code>Version</code>, with two values each. (<code>[{\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]},{\"Key\":\"Version\",\"Values\":[\"1\",\"2\"]}]</code>) The results of this query might include the following.</p> <ul> <li> <p>An EC2 instance that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"2\"]}</code> </p> </li> <li> <p>An S3 bucket that has the following two tags: {\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]}, and {\"Key\":\"Version\",\"Values\":[\"1\"]}</p> </li> </ul> <p>The query would not return the following results, however. The following EC2 instance does not have all tag keys specified in the filter, so it is rejected. The RDS database has all of the tag keys, but no values that match at least one of the specified tag key values in the filter.</p> <ul> <li> <p>An EC2 instance that has only the following tag: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>.</p> </li> <li> <p>An RDS database that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Archived\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"4\"]}</code> </p> </li> </ul> <p> <i> <code>CLOUDFORMATION_STACK_1_0:</code> </i> A JSON syntax that lets you specify a CloudFormation stack ARN.</p>",
                                                "enum": [
                                                    "TAG_FILTERS_1_0",
                                                    "CLOUDFORMATION_STACK_1_0"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Type",
                                            "Query"
                                        ],
                                        "type": "object"
                                    },
                                    "Tags": {
                                        "description": "The tags to add to the group. A tag is a string-to-string map of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Name",
                                    "ResourceQuery"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/groups-list": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns a list of existing resource groups in your account.",
                "operationId": "ListGroups",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "GroupIdentifiers": {
                                            "description": "A list of GroupIdentifier objects. Each identifier is an object that contains both the GroupName and the GroupArn.",
                                            "items": {
                                                "description": "The ARN and group name of a group.",
                                                "properties": {
                                                    "GroupArn": {
                                                        "description": "The ARN of a resource group.",
                                                        "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                                                        "type": "string"
                                                    },
                                                    "GroupName": {
                                                        "description": "The name of a resource group.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[a-zA-Z0-9_\\.-]+",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Groups": {
                                            "description": "A list of resource groups.This field is deprecated, use GroupIdentifiers instead.",
                                            "items": {
                                                "description": "A resource group.",
                                                "properties": {
                                                    "Description": {
                                                        "description": "The description of the resource group.",
                                                        "maxLength": 512,
                                                        "pattern": "[\\sa-zA-Z0-9_\\.-]*",
                                                        "type": "string"
                                                    },
                                                    "GroupArn": {
                                                        "description": "The ARN of a resource group.",
                                                        "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of a resource group.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[a-zA-Z0-9_\\.-]+",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "GroupArn",
                                                    "Name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The NextToken value to include in a subsequent <code>ListGroups</code> request, to get more results.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "MethodNotAllowedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "<p>Filters, formatted as GroupFilter objects, that you want to apply to a ListGroups operation.</p> <ul> <li> <p> <code>resource-type</code> - Filter groups by resource type. Specify up to five resource types in the format AWS::ServiceCode::ResourceType. For example, AWS::EC2::Instance, or AWS::S3::Bucket.</p> </li> </ul>",
                                        "items": {
                                            "description": "A filter name and value pair that is used to obtain more specific results from a list of groups.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the filter. Filter names are case-sensitive.",
                                                    "enum": [
                                                        "resource-type"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "One or more filter values. Allowed filter values vary by group filter name, and are case-sensitive.",
                                                    "items": {
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 5,
                                                    "minItems": 1,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/groups/{GroupName}": {
            "delete": {
                "description": "Deletes a specified resource group. Deleting a resource group does not delete resources that are members of the group; it only deletes the group structure.",
                "operationId": "DeleteGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "GroupName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Group": {
                                            "description": "A full description of the deleted resource group.",
                                            "properties": {
                                                "Description": {
                                                    "description": "The description of the resource group.",
                                                    "maxLength": 512,
                                                    "pattern": "[\\sa-zA-Z0-9_\\.-]*",
                                                    "type": "string"
                                                },
                                                "GroupArn": {
                                                    "description": "The ARN of a resource group.",
                                                    "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of a resource group.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[a-zA-Z0-9_\\.-]+",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "GroupArn",
                                                "Name"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "MethodNotAllowedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "Returns information about a specified resource group.",
                "operationId": "GetGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "GroupName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Group": {
                                            "description": "A full description of the resource group.",
                                            "properties": {
                                                "Description": {
                                                    "description": "The description of the resource group.",
                                                    "maxLength": 512,
                                                    "pattern": "[\\sa-zA-Z0-9_\\.-]*",
                                                    "type": "string"
                                                },
                                                "GroupArn": {
                                                    "description": "The ARN of a resource group.",
                                                    "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of a resource group.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[a-zA-Z0-9_\\.-]+",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "GroupArn",
                                                "Name"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "MethodNotAllowedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates an existing group with a new or changed description. You cannot update the name of a resource group.",
                "operationId": "UpdateGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "GroupName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Group": {
                                            "description": "The full description of the resource group after it has been updated.",
                                            "properties": {
                                                "Description": {
                                                    "description": "The description of the resource group.",
                                                    "maxLength": 512,
                                                    "pattern": "[\\sa-zA-Z0-9_\\.-]*",
                                                    "type": "string"
                                                },
                                                "GroupArn": {
                                                    "description": "The ARN of a resource group.",
                                                    "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of a resource group.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[a-zA-Z0-9_\\.-]+",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "GroupArn",
                                                "Name"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "MethodNotAllowedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Description": {
                                        "description": "The description of the resource group. Descriptions can have a maximum of 511 characters, including letters, numbers, hyphens, underscores, punctuation, and spaces.",
                                        "maxLength": 512,
                                        "pattern": "[\\sa-zA-Z0-9_\\.-]*",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/groups/{GroupName}/query": {
            "get": {
                "description": "Returns the resource query associated with the specified resource group.",
                "operationId": "GetGroupQuery",
                "parameters": [
                    {
                        "in": "path",
                        "name": "GroupName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "GroupQuery": {
                                            "description": "The resource query associated with the specified group.",
                                            "properties": {
                                                "GroupName": {
                                                    "description": "The name of a resource group that is associated with a specific resource query.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[a-zA-Z0-9_\\.-]+",
                                                    "type": "string"
                                                },
                                                "ResourceQuery": {
                                                    "description": "The resource query which determines which AWS resources are members of the associated resource group.",
                                                    "properties": {
                                                        "Query": {
                                                            "description": "The query that defines a group or a search.",
                                                            "maxLength": 2048,
                                                            "type": "string"
                                                        },
                                                        "Type": {
                                                            "description": "<p>The type of the query. The valid values in this release are <code>TAG_FILTERS_1_0</code> and <code>CLOUDFORMATION_STACK_1_0</code>.</p> <p> <i> <code>TAG_FILTERS_1_0:</code> </i> A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html\">GetResources</a> operation. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches <i>any</i> of the specified values.</p> <p>For example, consider the following sample query for resources that have two tags, <code>Stage</code> and <code>Version</code>, with two values each. (<code>[{\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]},{\"Key\":\"Version\",\"Values\":[\"1\",\"2\"]}]</code>) The results of this query might include the following.</p> <ul> <li> <p>An EC2 instance that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"2\"]}</code> </p> </li> <li> <p>An S3 bucket that has the following two tags: {\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]}, and {\"Key\":\"Version\",\"Values\":[\"1\"]}</p> </li> </ul> <p>The query would not return the following results, however. The following EC2 instance does not have all tag keys specified in the filter, so it is rejected. The RDS database has all of the tag keys, but no values that match at least one of the specified tag key values in the filter.</p> <ul> <li> <p>An EC2 instance that has only the following tag: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>.</p> </li> <li> <p>An RDS database that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Archived\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"4\"]}</code> </p> </li> </ul> <p> <i> <code>CLOUDFORMATION_STACK_1_0:</code> </i> A JSON syntax that lets you specify a CloudFormation stack ARN.</p>",
                                                            "enum": [
                                                                "TAG_FILTERS_1_0",
                                                                "CLOUDFORMATION_STACK_1_0"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "Type",
                                                        "Query"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "GroupName",
                                                "ResourceQuery"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "MethodNotAllowedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates the resource query of a group.",
                "operationId": "UpdateGroupQuery",
                "parameters": [
                    {
                        "in": "path",
                        "name": "GroupName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "GroupQuery": {
                                            "description": "The resource query associated with the resource group after the update.",
                                            "properties": {
                                                "GroupName": {
                                                    "description": "The name of a resource group that is associated with a specific resource query.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[a-zA-Z0-9_\\.-]+",
                                                    "type": "string"
                                                },
                                                "ResourceQuery": {
                                                    "description": "The resource query which determines which AWS resources are members of the associated resource group.",
                                                    "properties": {
                                                        "Query": {
                                                            "description": "The query that defines a group or a search.",
                                                            "maxLength": 2048,
                                                            "type": "string"
                                                        },
                                                        "Type": {
                                                            "description": "<p>The type of the query. The valid values in this release are <code>TAG_FILTERS_1_0</code> and <code>CLOUDFORMATION_STACK_1_0</code>.</p> <p> <i> <code>TAG_FILTERS_1_0:</code> </i> A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html\">GetResources</a> operation. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches <i>any</i> of the specified values.</p> <p>For example, consider the following sample query for resources that have two tags, <code>Stage</code> and <code>Version</code>, with two values each. (<code>[{\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]},{\"Key\":\"Version\",\"Values\":[\"1\",\"2\"]}]</code>) The results of this query might include the following.</p> <ul> <li> <p>An EC2 instance that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"2\"]}</code> </p> </li> <li> <p>An S3 bucket that has the following two tags: {\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]}, and {\"Key\":\"Version\",\"Values\":[\"1\"]}</p> </li> </ul> <p>The query would not return the following results, however. The following EC2 instance does not have all tag keys specified in the filter, so it is rejected. The RDS database has all of the tag keys, but no values that match at least one of the specified tag key values in the filter.</p> <ul> <li> <p>An EC2 instance that has only the following tag: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>.</p> </li> <li> <p>An RDS database that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Archived\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"4\"]}</code> </p> </li> </ul> <p> <i> <code>CLOUDFORMATION_STACK_1_0:</code> </i> A JSON syntax that lets you specify a CloudFormation stack ARN.</p>",
                                                            "enum": [
                                                                "TAG_FILTERS_1_0",
                                                                "CLOUDFORMATION_STACK_1_0"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "Type",
                                                        "Query"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "GroupName",
                                                "ResourceQuery"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "MethodNotAllowedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ResourceQuery": {
                                        "description": "The resource query that determines which AWS resources are members of the resource group.",
                                        "properties": {
                                            "Query": {
                                                "description": "The query that defines a group or a search.",
                                                "maxLength": 2048,
                                                "type": "string"
                                            },
                                            "Type": {
                                                "description": "<p>The type of the query. The valid values in this release are <code>TAG_FILTERS_1_0</code> and <code>CLOUDFORMATION_STACK_1_0</code>.</p> <p> <i> <code>TAG_FILTERS_1_0:</code> </i> A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html\">GetResources</a> operation. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches <i>any</i> of the specified values.</p> <p>For example, consider the following sample query for resources that have two tags, <code>Stage</code> and <code>Version</code>, with two values each. (<code>[{\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]},{\"Key\":\"Version\",\"Values\":[\"1\",\"2\"]}]</code>) The results of this query might include the following.</p> <ul> <li> <p>An EC2 instance that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"2\"]}</code> </p> </li> <li> <p>An S3 bucket that has the following two tags: {\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]}, and {\"Key\":\"Version\",\"Values\":[\"1\"]}</p> </li> </ul> <p>The query would not return the following results, however. The following EC2 instance does not have all tag keys specified in the filter, so it is rejected. The RDS database has all of the tag keys, but no values that match at least one of the specified tag key values in the filter.</p> <ul> <li> <p>An EC2 instance that has only the following tag: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>.</p> </li> <li> <p>An RDS database that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Archived\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"4\"]}</code> </p> </li> </ul> <p> <i> <code>CLOUDFORMATION_STACK_1_0:</code> </i> A JSON syntax that lets you specify a CloudFormation stack ARN.</p>",
                                                "enum": [
                                                    "TAG_FILTERS_1_0",
                                                    "CLOUDFORMATION_STACK_1_0"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Type",
                                            "Query"
                                        ],
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "ResourceQuery"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/groups/{GroupName}/resource-identifiers-list": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns a list of ARNs of resources that are members of a specified resource group.",
                "operationId": "ListGroupResources",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "GroupName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The NextToken value to include in a subsequent <code>ListGroupResources</code> request, to get more results.",
                                            "type": "string"
                                        },
                                        "QueryErrors": {
                                            "description": "A list of <code>QueryError</code> objects. Each error is an object that contains <code>ErrorCode</code> and <code>Message</code> structures. Possible values for <code>ErrorCode</code> are <code>CLOUDFORMATION_STACK_INACTIVE</code> and <code>CLOUDFORMATION_STACK_NOT_EXISTING</code>.",
                                            "items": {
                                                "description": "A two-part error structure that can occur in <code>ListGroupResources</code> or <code>SearchResources</code> operations on CloudFormation stack-based queries. The error occurs if the CloudFormation stack on which the query is based either does not exist, or has a status that renders the stack inactive. A <code>QueryError</code> occurrence does not necessarily mean that AWS Resource Groups could not complete the operation, but the resulting group might have no member resources.",
                                                "properties": {
                                                    "ErrorCode": {
                                                        "description": "Possible values are <code>CLOUDFORMATION_STACK_INACTIVE</code> and <code>CLOUDFORMATION_STACK_NOT_EXISTING</code>.",
                                                        "enum": [
                                                            "CLOUDFORMATION_STACK_INACTIVE",
                                                            "CLOUDFORMATION_STACK_NOT_EXISTING"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Message": {
                                                        "description": "A message that explains the <code>ErrorCode</code> value. Messages might state that the specified CloudFormation stack does not exist (or no longer exists). For <code>CLOUDFORMATION_STACK_INACTIVE</code>, the message typically states that the CloudFormation stack has a status that is not (or no longer) active, such as <code>CREATE_FAILED</code>.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "ResourceIdentifiers": {
                                            "description": "The ARNs and resource types of resources that are members of the group that you specified.",
                                            "items": {
                                                "description": "The ARN of a resource, and its resource type.",
                                                "properties": {
                                                    "ResourceArn": {
                                                        "description": "The ARN of a resource.",
                                                        "pattern": "arn:aws:[a-z0-9\\-]*:([a-z]{2}-[a-z]+-\\d{1})?:([0-9]{12})?:.+",
                                                        "type": "string"
                                                    },
                                                    "ResourceType": {
                                                        "description": "The resource type of a resource, such as <code>AWS::EC2::Instance</code>.",
                                                        "pattern": "AWS::[a-zA-Z0-9]+::\\w+",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "MethodNotAllowedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Filters": {
                                        "description": "<p>Filters, formatted as ResourceFilter objects, that you want to apply to a ListGroupResources operation.</p> <ul> <li> <p> <code>resource-type</code> - Filter resources by their type. Specify up to five resource types in the format AWS::ServiceCode::ResourceType. For example, AWS::EC2::Instance, or AWS::S3::Bucket.</p> </li> </ul>",
                                        "items": {
                                            "description": "A filter name and value pair that is used to obtain more specific results from a list of resources.",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the filter. Filter names are case-sensitive.",
                                                    "enum": [
                                                        "resource-type"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "One or more filter values. Allowed filter values vary by resource filter name, and are case-sensitive.",
                                                    "items": {
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "AWS::[a-zA-Z0-9]+::[a-zA-Z0-9]+",
                                                        "type": "string"
                                                    },
                                                    "maxItems": 5,
                                                    "minItems": 1,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/resources/search": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns a list of AWS resource identifiers that matches a specified query. The query uses the same format as a resource query in a CreateGroup or UpdateGroupQuery operation.",
                "operationId": "SearchResources",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "The NextToken value to include in a subsequent <code>SearchResources</code> request, to get more results.",
                                            "type": "string"
                                        },
                                        "QueryErrors": {
                                            "description": "A list of <code>QueryError</code> objects. Each error is an object that contains <code>ErrorCode</code> and <code>Message</code> structures. Possible values for <code>ErrorCode</code> are <code>CLOUDFORMATION_STACK_INACTIVE</code> and <code>CLOUDFORMATION_STACK_NOT_EXISTING</code>.",
                                            "items": {
                                                "description": "A two-part error structure that can occur in <code>ListGroupResources</code> or <code>SearchResources</code> operations on CloudFormation stack-based queries. The error occurs if the CloudFormation stack on which the query is based either does not exist, or has a status that renders the stack inactive. A <code>QueryError</code> occurrence does not necessarily mean that AWS Resource Groups could not complete the operation, but the resulting group might have no member resources.",
                                                "properties": {
                                                    "ErrorCode": {
                                                        "description": "Possible values are <code>CLOUDFORMATION_STACK_INACTIVE</code> and <code>CLOUDFORMATION_STACK_NOT_EXISTING</code>.",
                                                        "enum": [
                                                            "CLOUDFORMATION_STACK_INACTIVE",
                                                            "CLOUDFORMATION_STACK_NOT_EXISTING"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Message": {
                                                        "description": "A message that explains the <code>ErrorCode</code> value. Messages might state that the specified CloudFormation stack does not exist (or no longer exists). For <code>CLOUDFORMATION_STACK_INACTIVE</code>, the message typically states that the CloudFormation stack has a status that is not (or no longer) active, such as <code>CREATE_FAILED</code>.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "ResourceIdentifiers": {
                                            "description": "The ARNs and resource types of resources that are members of the group that you specified.",
                                            "items": {
                                                "description": "The ARN of a resource, and its resource type.",
                                                "properties": {
                                                    "ResourceArn": {
                                                        "description": "The ARN of a resource.",
                                                        "pattern": "arn:aws:[a-z0-9\\-]*:([a-z]{2}-[a-z]+-\\d{1})?:([0-9]{12})?:.+",
                                                        "type": "string"
                                                    },
                                                    "ResourceType": {
                                                        "description": "The resource type of a resource, such as <code>AWS::EC2::Instance</code>.",
                                                        "pattern": "AWS::[a-zA-Z0-9]+::\\w+",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "UnauthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "MethodNotAllowedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "MaxResults": {
                                        "description": "The maximum number of group member ARNs returned by <code>SearchResources</code> in paginated output. By default, this number is 50.",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "The NextToken value that is returned in a paginated <code>SearchResources</code> request. To get the next page of results, run the call again, add the NextToken parameter, and specify the NextToken value.",
                                        "type": "string"
                                    },
                                    "ResourceQuery": {
                                        "description": "The search query, using the same formats that are supported for resource group definition.",
                                        "properties": {
                                            "Query": {
                                                "description": "The query that defines a group or a search.",
                                                "maxLength": 2048,
                                                "type": "string"
                                            },
                                            "Type": {
                                                "description": "<p>The type of the query. The valid values in this release are <code>TAG_FILTERS_1_0</code> and <code>CLOUDFORMATION_STACK_1_0</code>.</p> <p> <i> <code>TAG_FILTERS_1_0:</code> </i> A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html\">GetResources</a> operation. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches <i>any</i> of the specified values.</p> <p>For example, consider the following sample query for resources that have two tags, <code>Stage</code> and <code>Version</code>, with two values each. (<code>[{\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]},{\"Key\":\"Version\",\"Values\":[\"1\",\"2\"]}]</code>) The results of this query might include the following.</p> <ul> <li> <p>An EC2 instance that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"2\"]}</code> </p> </li> <li> <p>An S3 bucket that has the following two tags: {\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]}, and {\"Key\":\"Version\",\"Values\":[\"1\"]}</p> </li> </ul> <p>The query would not return the following results, however. The following EC2 instance does not have all tag keys specified in the filter, so it is rejected. The RDS database has all of the tag keys, but no values that match at least one of the specified tag key values in the filter.</p> <ul> <li> <p>An EC2 instance that has only the following tag: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>.</p> </li> <li> <p>An RDS database that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Archived\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"4\"]}</code> </p> </li> </ul> <p> <i> <code>CLOUDFORMATION_STACK_1_0:</code> </i> A JSON syntax that lets you specify a CloudFormation stack ARN.</p>",
                                                "enum": [
                                                    "TAG_FILTERS_1_0",
                                                    "CLOUDFORMATION_STACK_1_0"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Type",
                                            "Query"
                                        ],
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "ResourceQuery"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/resources/{Arn}/tags": {
            "get": {
                "description": "Returns a list of tags that are associated with a resource, specified by an ARN.",
                "operationId": "GetTags",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Arn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Arn": {
                                            "description": "The ARN of the tagged resource.",
                                            "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                                            "type": "string"
                                        },
                                        "Tags": {
                                            "description": "The tags associated with the specified resource.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "MethodNotAllowedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "patch": {
                "description": "Deletes specified tags from a specified resource.",
                "operationId": "Untag",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Arn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Arn": {
                                            "description": "The ARN of the resource from which tags have been removed.",
                                            "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                                            "type": "string"
                                        },
                                        "Keys": {
                                            "description": "The keys of tags that have been removed.",
                                            "items": {
                                                "maxLength": 128,
                                                "minLength": 1,
                                                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "MethodNotAllowedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Keys": {
                                        "description": "The keys of the tags to be removed.",
                                        "items": {
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Keys"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "put": {
                "description": "Adds tags to a resource group with the specified ARN. Existing tags on a resource group are not changed if they are not specified in the request parameters.",
                "operationId": "Tag",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Arn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Arn": {
                                            "description": "The ARN of the tagged resource.",
                                            "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                                            "type": "string"
                                        },
                                        "Tags": {
                                            "description": "The tags that have been added to the specified resource.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "MethodNotAllowedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Tags": {
                                        "description": "The tags to add to the specified resource. A tag is a string-to-string map of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Tags"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BadRequestException": {},
            "CreateGroupInput": {
                "properties": {
                    "Description": {
                        "description": "The description of the resource group. Descriptions can have a maximum of 511 characters, including letters, numbers, hyphens, underscores, punctuation, and spaces.",
                        "maxLength": 512,
                        "pattern": "[\\sa-zA-Z0-9_\\.-]*",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the group, which is the identifier of the group in other operations. A resource group name cannot be updated after it is created. A resource group name can have a maximum of 128 characters, including letters, numbers, hyphens, dots, and underscores. The name cannot start with <code>AWS</code> or <code>aws</code>; these are reserved. A resource group name must be unique within your account.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9_\\.-]+",
                        "type": "string"
                    },
                    "ResourceQuery": {
                        "description": "The resource query that determines which AWS resources are members of this group.",
                        "properties": {
                            "Query": {
                                "description": "The query that defines a group or a search.",
                                "maxLength": 2048,
                                "type": "string"
                            },
                            "Type": {
                                "description": "<p>The type of the query. The valid values in this release are <code>TAG_FILTERS_1_0</code> and <code>CLOUDFORMATION_STACK_1_0</code>.</p> <p> <i> <code>TAG_FILTERS_1_0:</code> </i> A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html\">GetResources</a> operation. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches <i>any</i> of the specified values.</p> <p>For example, consider the following sample query for resources that have two tags, <code>Stage</code> and <code>Version</code>, with two values each. (<code>[{\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]},{\"Key\":\"Version\",\"Values\":[\"1\",\"2\"]}]</code>) The results of this query might include the following.</p> <ul> <li> <p>An EC2 instance that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"2\"]}</code> </p> </li> <li> <p>An S3 bucket that has the following two tags: {\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]}, and {\"Key\":\"Version\",\"Values\":[\"1\"]}</p> </li> </ul> <p>The query would not return the following results, however. The following EC2 instance does not have all tag keys specified in the filter, so it is rejected. The RDS database has all of the tag keys, but no values that match at least one of the specified tag key values in the filter.</p> <ul> <li> <p>An EC2 instance that has only the following tag: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>.</p> </li> <li> <p>An RDS database that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Archived\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"4\"]}</code> </p> </li> </ul> <p> <i> <code>CLOUDFORMATION_STACK_1_0:</code> </i> A JSON syntax that lets you specify a CloudFormation stack ARN.</p>",
                                "enum": [
                                    "TAG_FILTERS_1_0",
                                    "CLOUDFORMATION_STACK_1_0"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "Type",
                            "Query"
                        ],
                        "type": "object"
                    },
                    "Tags": {
                        "description": "The tags to add to the group. A tag is a string-to-string map of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "value": {
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Name",
                    "ResourceQuery"
                ],
                "type": "object"
            },
            "CreateGroupOutput": {
                "properties": {
                    "Group": {
                        "description": "A full description of the resource group after it is created.",
                        "properties": {
                            "Description": {
                                "description": "The description of the resource group.",
                                "maxLength": 512,
                                "pattern": "[\\sa-zA-Z0-9_\\.-]*",
                                "type": "string"
                            },
                            "GroupArn": {
                                "description": "The ARN of a resource group.",
                                "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of a resource group.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[a-zA-Z0-9_\\.-]+",
                                "type": "string"
                            }
                        },
                        "required": [
                            "GroupArn",
                            "Name"
                        ],
                        "type": "object"
                    },
                    "ResourceQuery": {
                        "description": "The resource query associated with the group.",
                        "properties": {
                            "Query": {
                                "description": "The query that defines a group or a search.",
                                "maxLength": 2048,
                                "type": "string"
                            },
                            "Type": {
                                "description": "<p>The type of the query. The valid values in this release are <code>TAG_FILTERS_1_0</code> and <code>CLOUDFORMATION_STACK_1_0</code>.</p> <p> <i> <code>TAG_FILTERS_1_0:</code> </i> A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html\">GetResources</a> operation. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches <i>any</i> of the specified values.</p> <p>For example, consider the following sample query for resources that have two tags, <code>Stage</code> and <code>Version</code>, with two values each. (<code>[{\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]},{\"Key\":\"Version\",\"Values\":[\"1\",\"2\"]}]</code>) The results of this query might include the following.</p> <ul> <li> <p>An EC2 instance that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"2\"]}</code> </p> </li> <li> <p>An S3 bucket that has the following two tags: {\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]}, and {\"Key\":\"Version\",\"Values\":[\"1\"]}</p> </li> </ul> <p>The query would not return the following results, however. The following EC2 instance does not have all tag keys specified in the filter, so it is rejected. The RDS database has all of the tag keys, but no values that match at least one of the specified tag key values in the filter.</p> <ul> <li> <p>An EC2 instance that has only the following tag: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>.</p> </li> <li> <p>An RDS database that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Archived\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"4\"]}</code> </p> </li> </ul> <p> <i> <code>CLOUDFORMATION_STACK_1_0:</code> </i> A JSON syntax that lets you specify a CloudFormation stack ARN.</p>",
                                "enum": [
                                    "TAG_FILTERS_1_0",
                                    "CLOUDFORMATION_STACK_1_0"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "Type",
                            "Query"
                        ],
                        "type": "object"
                    },
                    "Tags": {
                        "description": "The tags associated with the group.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "value": {
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DeleteGroupInput": {
                "properties": {},
                "type": "object"
            },
            "DeleteGroupOutput": {
                "properties": {
                    "Group": {
                        "description": "A full description of the deleted resource group.",
                        "properties": {
                            "Description": {
                                "description": "The description of the resource group.",
                                "maxLength": 512,
                                "pattern": "[\\sa-zA-Z0-9_\\.-]*",
                                "type": "string"
                            },
                            "GroupArn": {
                                "description": "The ARN of a resource group.",
                                "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of a resource group.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[a-zA-Z0-9_\\.-]+",
                                "type": "string"
                            }
                        },
                        "required": [
                            "GroupArn",
                            "Name"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ForbiddenException": {},
            "GetGroupInput": {
                "properties": {},
                "type": "object"
            },
            "GetGroupOutput": {
                "properties": {
                    "Group": {
                        "description": "A full description of the resource group.",
                        "properties": {
                            "Description": {
                                "description": "The description of the resource group.",
                                "maxLength": 512,
                                "pattern": "[\\sa-zA-Z0-9_\\.-]*",
                                "type": "string"
                            },
                            "GroupArn": {
                                "description": "The ARN of a resource group.",
                                "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of a resource group.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[a-zA-Z0-9_\\.-]+",
                                "type": "string"
                            }
                        },
                        "required": [
                            "GroupArn",
                            "Name"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetGroupQueryInput": {
                "properties": {},
                "type": "object"
            },
            "GetGroupQueryOutput": {
                "properties": {
                    "GroupQuery": {
                        "description": "The resource query associated with the specified group.",
                        "properties": {
                            "GroupName": {
                                "description": "The name of a resource group that is associated with a specific resource query.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[a-zA-Z0-9_\\.-]+",
                                "type": "string"
                            },
                            "ResourceQuery": {
                                "description": "The resource query which determines which AWS resources are members of the associated resource group.",
                                "properties": {
                                    "Query": {
                                        "description": "The query that defines a group or a search.",
                                        "maxLength": 2048,
                                        "type": "string"
                                    },
                                    "Type": {
                                        "description": "<p>The type of the query. The valid values in this release are <code>TAG_FILTERS_1_0</code> and <code>CLOUDFORMATION_STACK_1_0</code>.</p> <p> <i> <code>TAG_FILTERS_1_0:</code> </i> A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html\">GetResources</a> operation. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches <i>any</i> of the specified values.</p> <p>For example, consider the following sample query for resources that have two tags, <code>Stage</code> and <code>Version</code>, with two values each. (<code>[{\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]},{\"Key\":\"Version\",\"Values\":[\"1\",\"2\"]}]</code>) The results of this query might include the following.</p> <ul> <li> <p>An EC2 instance that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"2\"]}</code> </p> </li> <li> <p>An S3 bucket that has the following two tags: {\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]}, and {\"Key\":\"Version\",\"Values\":[\"1\"]}</p> </li> </ul> <p>The query would not return the following results, however. The following EC2 instance does not have all tag keys specified in the filter, so it is rejected. The RDS database has all of the tag keys, but no values that match at least one of the specified tag key values in the filter.</p> <ul> <li> <p>An EC2 instance that has only the following tag: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>.</p> </li> <li> <p>An RDS database that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Archived\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"4\"]}</code> </p> </li> </ul> <p> <i> <code>CLOUDFORMATION_STACK_1_0:</code> </i> A JSON syntax that lets you specify a CloudFormation stack ARN.</p>",
                                        "enum": [
                                            "TAG_FILTERS_1_0",
                                            "CLOUDFORMATION_STACK_1_0"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Type",
                                    "Query"
                                ],
                                "type": "object"
                            }
                        },
                        "required": [
                            "GroupName",
                            "ResourceQuery"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetTagsInput": {
                "properties": {},
                "type": "object"
            },
            "GetTagsOutput": {
                "properties": {
                    "Arn": {
                        "description": "The ARN of the tagged resource.",
                        "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "The tags associated with the specified resource.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "value": {
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Group": {
                "description": "A resource group.",
                "properties": {
                    "Description": {
                        "description": "The description of the resource group.",
                        "maxLength": 512,
                        "pattern": "[\\sa-zA-Z0-9_\\.-]*",
                        "type": "string"
                    },
                    "GroupArn": {
                        "description": "The ARN of a resource group.",
                        "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of a resource group.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9_\\.-]+",
                        "type": "string"
                    }
                },
                "required": [
                    "GroupArn",
                    "Name"
                ],
                "type": "object"
            },
            "GroupArn": {
                "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                "type": "string"
            },
            "GroupDescription": {
                "maxLength": 512,
                "pattern": "[\\sa-zA-Z0-9_\\.-]*",
                "type": "string"
            },
            "GroupFilter": {
                "description": "A filter name and value pair that is used to obtain more specific results from a list of groups.",
                "properties": {
                    "Name": {
                        "description": "The name of the filter. Filter names are case-sensitive.",
                        "enum": [
                            "resource-type"
                        ],
                        "type": "string"
                    },
                    "Values": {
                        "description": "One or more filter values. Allowed filter values vary by group filter name, and are case-sensitive.",
                        "items": {
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 5,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "Name",
                    "Values"
                ],
                "type": "object"
            },
            "GroupFilterList": {
                "items": {
                    "description": "A filter name and value pair that is used to obtain more specific results from a list of groups.",
                    "properties": {
                        "Name": {
                            "description": "The name of the filter. Filter names are case-sensitive.",
                            "enum": [
                                "resource-type"
                            ],
                            "type": "string"
                        },
                        "Values": {
                            "description": "One or more filter values. Allowed filter values vary by group filter name, and are case-sensitive.",
                            "items": {
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            },
                            "maxItems": 5,
                            "minItems": 1,
                            "type": "array"
                        }
                    },
                    "required": [
                        "Name",
                        "Values"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "GroupFilterName": {
                "enum": [
                    "resource-type"
                ],
                "type": "string"
            },
            "GroupFilterValue": {
                "maxLength": 128,
                "minLength": 1,
                "type": "string"
            },
            "GroupFilterValues": {
                "items": {
                    "maxLength": 128,
                    "minLength": 1,
                    "type": "string"
                },
                "maxItems": 5,
                "minItems": 1,
                "type": "array"
            },
            "GroupIdentifier": {
                "description": "The ARN and group name of a group.",
                "properties": {
                    "GroupArn": {
                        "description": "The ARN of a resource group.",
                        "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                        "type": "string"
                    },
                    "GroupName": {
                        "description": "The name of a resource group.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9_\\.-]+",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GroupIdentifierList": {
                "items": {
                    "description": "The ARN and group name of a group.",
                    "properties": {
                        "GroupArn": {
                            "description": "The ARN of a resource group.",
                            "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                            "type": "string"
                        },
                        "GroupName": {
                            "description": "The name of a resource group.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "[a-zA-Z0-9_\\.-]+",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "GroupList": {
                "items": {
                    "description": "A resource group.",
                    "properties": {
                        "Description": {
                            "description": "The description of the resource group.",
                            "maxLength": 512,
                            "pattern": "[\\sa-zA-Z0-9_\\.-]*",
                            "type": "string"
                        },
                        "GroupArn": {
                            "description": "The ARN of a resource group.",
                            "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name of a resource group.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "[a-zA-Z0-9_\\.-]+",
                            "type": "string"
                        }
                    },
                    "required": [
                        "GroupArn",
                        "Name"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "GroupName": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "[a-zA-Z0-9_\\.-]+",
                "type": "string"
            },
            "GroupQuery": {
                "description": "The underlying resource query of a resource group. Resources that match query results are part of the group.",
                "properties": {
                    "GroupName": {
                        "description": "The name of a resource group that is associated with a specific resource query.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9_\\.-]+",
                        "type": "string"
                    },
                    "ResourceQuery": {
                        "description": "The resource query which determines which AWS resources are members of the associated resource group.",
                        "properties": {
                            "Query": {
                                "description": "The query that defines a group or a search.",
                                "maxLength": 2048,
                                "type": "string"
                            },
                            "Type": {
                                "description": "<p>The type of the query. The valid values in this release are <code>TAG_FILTERS_1_0</code> and <code>CLOUDFORMATION_STACK_1_0</code>.</p> <p> <i> <code>TAG_FILTERS_1_0:</code> </i> A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html\">GetResources</a> operation. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches <i>any</i> of the specified values.</p> <p>For example, consider the following sample query for resources that have two tags, <code>Stage</code> and <code>Version</code>, with two values each. (<code>[{\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]},{\"Key\":\"Version\",\"Values\":[\"1\",\"2\"]}]</code>) The results of this query might include the following.</p> <ul> <li> <p>An EC2 instance that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"2\"]}</code> </p> </li> <li> <p>An S3 bucket that has the following two tags: {\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]}, and {\"Key\":\"Version\",\"Values\":[\"1\"]}</p> </li> </ul> <p>The query would not return the following results, however. The following EC2 instance does not have all tag keys specified in the filter, so it is rejected. The RDS database has all of the tag keys, but no values that match at least one of the specified tag key values in the filter.</p> <ul> <li> <p>An EC2 instance that has only the following tag: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>.</p> </li> <li> <p>An RDS database that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Archived\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"4\"]}</code> </p> </li> </ul> <p> <i> <code>CLOUDFORMATION_STACK_1_0:</code> </i> A JSON syntax that lets you specify a CloudFormation stack ARN.</p>",
                                "enum": [
                                    "TAG_FILTERS_1_0",
                                    "CLOUDFORMATION_STACK_1_0"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "Type",
                            "Query"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "GroupName",
                    "ResourceQuery"
                ],
                "type": "object"
            },
            "InternalServerErrorException": {},
            "ListGroupResourcesInput": {
                "properties": {
                    "Filters": {
                        "description": "<p>Filters, formatted as ResourceFilter objects, that you want to apply to a ListGroupResources operation.</p> <ul> <li> <p> <code>resource-type</code> - Filter resources by their type. Specify up to five resource types in the format AWS::ServiceCode::ResourceType. For example, AWS::EC2::Instance, or AWS::S3::Bucket.</p> </li> </ul>",
                        "items": {
                            "description": "A filter name and value pair that is used to obtain more specific results from a list of resources.",
                            "properties": {
                                "Name": {
                                    "description": "The name of the filter. Filter names are case-sensitive.",
                                    "enum": [
                                        "resource-type"
                                    ],
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "One or more filter values. Allowed filter values vary by resource filter name, and are case-sensitive.",
                                    "items": {
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "AWS::[a-zA-Z0-9]+::[a-zA-Z0-9]+",
                                        "type": "string"
                                    },
                                    "maxItems": 5,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListGroupResourcesOutput": {
                "properties": {
                    "NextToken": {
                        "description": "The NextToken value to include in a subsequent <code>ListGroupResources</code> request, to get more results.",
                        "type": "string"
                    },
                    "QueryErrors": {
                        "description": "A list of <code>QueryError</code> objects. Each error is an object that contains <code>ErrorCode</code> and <code>Message</code> structures. Possible values for <code>ErrorCode</code> are <code>CLOUDFORMATION_STACK_INACTIVE</code> and <code>CLOUDFORMATION_STACK_NOT_EXISTING</code>.",
                        "items": {
                            "description": "A two-part error structure that can occur in <code>ListGroupResources</code> or <code>SearchResources</code> operations on CloudFormation stack-based queries. The error occurs if the CloudFormation stack on which the query is based either does not exist, or has a status that renders the stack inactive. A <code>QueryError</code> occurrence does not necessarily mean that AWS Resource Groups could not complete the operation, but the resulting group might have no member resources.",
                            "properties": {
                                "ErrorCode": {
                                    "description": "Possible values are <code>CLOUDFORMATION_STACK_INACTIVE</code> and <code>CLOUDFORMATION_STACK_NOT_EXISTING</code>.",
                                    "enum": [
                                        "CLOUDFORMATION_STACK_INACTIVE",
                                        "CLOUDFORMATION_STACK_NOT_EXISTING"
                                    ],
                                    "type": "string"
                                },
                                "Message": {
                                    "description": "A message that explains the <code>ErrorCode</code> value. Messages might state that the specified CloudFormation stack does not exist (or no longer exists). For <code>CLOUDFORMATION_STACK_INACTIVE</code>, the message typically states that the CloudFormation stack has a status that is not (or no longer) active, such as <code>CREATE_FAILED</code>.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "ResourceIdentifiers": {
                        "description": "The ARNs and resource types of resources that are members of the group that you specified.",
                        "items": {
                            "description": "The ARN of a resource, and its resource type.",
                            "properties": {
                                "ResourceArn": {
                                    "description": "The ARN of a resource.",
                                    "pattern": "arn:aws:[a-z0-9\\-]*:([a-z]{2}-[a-z]+-\\d{1})?:([0-9]{12})?:.+",
                                    "type": "string"
                                },
                                "ResourceType": {
                                    "description": "The resource type of a resource, such as <code>AWS::EC2::Instance</code>.",
                                    "pattern": "AWS::[a-zA-Z0-9]+::\\w+",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListGroupsInput": {
                "properties": {
                    "Filters": {
                        "description": "<p>Filters, formatted as GroupFilter objects, that you want to apply to a ListGroups operation.</p> <ul> <li> <p> <code>resource-type</code> - Filter groups by resource type. Specify up to five resource types in the format AWS::ServiceCode::ResourceType. For example, AWS::EC2::Instance, or AWS::S3::Bucket.</p> </li> </ul>",
                        "items": {
                            "description": "A filter name and value pair that is used to obtain more specific results from a list of groups.",
                            "properties": {
                                "Name": {
                                    "description": "The name of the filter. Filter names are case-sensitive.",
                                    "enum": [
                                        "resource-type"
                                    ],
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "One or more filter values. Allowed filter values vary by group filter name, and are case-sensitive.",
                                    "items": {
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 5,
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListGroupsOutput": {
                "properties": {
                    "GroupIdentifiers": {
                        "description": "A list of GroupIdentifier objects. Each identifier is an object that contains both the GroupName and the GroupArn.",
                        "items": {
                            "description": "The ARN and group name of a group.",
                            "properties": {
                                "GroupArn": {
                                    "description": "The ARN of a resource group.",
                                    "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                                    "type": "string"
                                },
                                "GroupName": {
                                    "description": "The name of a resource group.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9_\\.-]+",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Groups": {
                        "description": "A list of resource groups.This field is deprecated, use GroupIdentifiers instead.",
                        "items": {
                            "description": "A resource group.",
                            "properties": {
                                "Description": {
                                    "description": "The description of the resource group.",
                                    "maxLength": 512,
                                    "pattern": "[\\sa-zA-Z0-9_\\.-]*",
                                    "type": "string"
                                },
                                "GroupArn": {
                                    "description": "The ARN of a resource group.",
                                    "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of a resource group.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9_\\.-]+",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "GroupArn",
                                "Name"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The NextToken value to include in a subsequent <code>ListGroups</code> request, to get more results.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MaxResults": {
                "maximum": 50,
                "minimum": 1,
                "type": "integer"
            },
            "MethodNotAllowedException": {},
            "NextToken": {
                "type": "string"
            },
            "NotFoundException": {},
            "Query": {
                "maxLength": 2048,
                "type": "string"
            },
            "QueryError": {
                "description": "A two-part error structure that can occur in <code>ListGroupResources</code> or <code>SearchResources</code> operations on CloudFormation stack-based queries. The error occurs if the CloudFormation stack on which the query is based either does not exist, or has a status that renders the stack inactive. A <code>QueryError</code> occurrence does not necessarily mean that AWS Resource Groups could not complete the operation, but the resulting group might have no member resources.",
                "properties": {
                    "ErrorCode": {
                        "description": "Possible values are <code>CLOUDFORMATION_STACK_INACTIVE</code> and <code>CLOUDFORMATION_STACK_NOT_EXISTING</code>.",
                        "enum": [
                            "CLOUDFORMATION_STACK_INACTIVE",
                            "CLOUDFORMATION_STACK_NOT_EXISTING"
                        ],
                        "type": "string"
                    },
                    "Message": {
                        "description": "A message that explains the <code>ErrorCode</code> value. Messages might state that the specified CloudFormation stack does not exist (or no longer exists). For <code>CLOUDFORMATION_STACK_INACTIVE</code>, the message typically states that the CloudFormation stack has a status that is not (or no longer) active, such as <code>CREATE_FAILED</code>.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "QueryErrorCode": {
                "enum": [
                    "CLOUDFORMATION_STACK_INACTIVE",
                    "CLOUDFORMATION_STACK_NOT_EXISTING"
                ],
                "type": "string"
            },
            "QueryErrorList": {
                "items": {
                    "description": "A two-part error structure that can occur in <code>ListGroupResources</code> or <code>SearchResources</code> operations on CloudFormation stack-based queries. The error occurs if the CloudFormation stack on which the query is based either does not exist, or has a status that renders the stack inactive. A <code>QueryError</code> occurrence does not necessarily mean that AWS Resource Groups could not complete the operation, but the resulting group might have no member resources.",
                    "properties": {
                        "ErrorCode": {
                            "description": "Possible values are <code>CLOUDFORMATION_STACK_INACTIVE</code> and <code>CLOUDFORMATION_STACK_NOT_EXISTING</code>.",
                            "enum": [
                                "CLOUDFORMATION_STACK_INACTIVE",
                                "CLOUDFORMATION_STACK_NOT_EXISTING"
                            ],
                            "type": "string"
                        },
                        "Message": {
                            "description": "A message that explains the <code>ErrorCode</code> value. Messages might state that the specified CloudFormation stack does not exist (or no longer exists). For <code>CLOUDFORMATION_STACK_INACTIVE</code>, the message typically states that the CloudFormation stack has a status that is not (or no longer) active, such as <code>CREATE_FAILED</code>.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "QueryErrorMessage": {
                "type": "string"
            },
            "QueryType": {
                "enum": [
                    "TAG_FILTERS_1_0",
                    "CLOUDFORMATION_STACK_1_0"
                ],
                "type": "string"
            },
            "ResourceArn": {
                "pattern": "arn:aws:[a-z0-9\\-]*:([a-z]{2}-[a-z]+-\\d{1})?:([0-9]{12})?:.+",
                "type": "string"
            },
            "ResourceFilter": {
                "description": "A filter name and value pair that is used to obtain more specific results from a list of resources.",
                "properties": {
                    "Name": {
                        "description": "The name of the filter. Filter names are case-sensitive.",
                        "enum": [
                            "resource-type"
                        ],
                        "type": "string"
                    },
                    "Values": {
                        "description": "One or more filter values. Allowed filter values vary by resource filter name, and are case-sensitive.",
                        "items": {
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "AWS::[a-zA-Z0-9]+::[a-zA-Z0-9]+",
                            "type": "string"
                        },
                        "maxItems": 5,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "Name",
                    "Values"
                ],
                "type": "object"
            },
            "ResourceFilterList": {
                "items": {
                    "description": "A filter name and value pair that is used to obtain more specific results from a list of resources.",
                    "properties": {
                        "Name": {
                            "description": "The name of the filter. Filter names are case-sensitive.",
                            "enum": [
                                "resource-type"
                            ],
                            "type": "string"
                        },
                        "Values": {
                            "description": "One or more filter values. Allowed filter values vary by resource filter name, and are case-sensitive.",
                            "items": {
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "AWS::[a-zA-Z0-9]+::[a-zA-Z0-9]+",
                                "type": "string"
                            },
                            "maxItems": 5,
                            "minItems": 1,
                            "type": "array"
                        }
                    },
                    "required": [
                        "Name",
                        "Values"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "ResourceFilterName": {
                "enum": [
                    "resource-type"
                ],
                "type": "string"
            },
            "ResourceFilterValue": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "AWS::[a-zA-Z0-9]+::[a-zA-Z0-9]+",
                "type": "string"
            },
            "ResourceFilterValues": {
                "items": {
                    "maxLength": 128,
                    "minLength": 1,
                    "pattern": "AWS::[a-zA-Z0-9]+::[a-zA-Z0-9]+",
                    "type": "string"
                },
                "maxItems": 5,
                "minItems": 1,
                "type": "array"
            },
            "ResourceIdentifier": {
                "description": "The ARN of a resource, and its resource type.",
                "properties": {
                    "ResourceArn": {
                        "description": "The ARN of a resource.",
                        "pattern": "arn:aws:[a-z0-9\\-]*:([a-z]{2}-[a-z]+-\\d{1})?:([0-9]{12})?:.+",
                        "type": "string"
                    },
                    "ResourceType": {
                        "description": "The resource type of a resource, such as <code>AWS::EC2::Instance</code>.",
                        "pattern": "AWS::[a-zA-Z0-9]+::\\w+",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ResourceIdentifierList": {
                "items": {
                    "description": "The ARN of a resource, and its resource type.",
                    "properties": {
                        "ResourceArn": {
                            "description": "The ARN of a resource.",
                            "pattern": "arn:aws:[a-z0-9\\-]*:([a-z]{2}-[a-z]+-\\d{1})?:([0-9]{12})?:.+",
                            "type": "string"
                        },
                        "ResourceType": {
                            "description": "The resource type of a resource, such as <code>AWS::EC2::Instance</code>.",
                            "pattern": "AWS::[a-zA-Z0-9]+::\\w+",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ResourceQuery": {
                "description": "The query that is used to define a resource group or a search for resources.",
                "properties": {
                    "Query": {
                        "description": "The query that defines a group or a search.",
                        "maxLength": 2048,
                        "type": "string"
                    },
                    "Type": {
                        "description": "<p>The type of the query. The valid values in this release are <code>TAG_FILTERS_1_0</code> and <code>CLOUDFORMATION_STACK_1_0</code>.</p> <p> <i> <code>TAG_FILTERS_1_0:</code> </i> A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html\">GetResources</a> operation. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches <i>any</i> of the specified values.</p> <p>For example, consider the following sample query for resources that have two tags, <code>Stage</code> and <code>Version</code>, with two values each. (<code>[{\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]},{\"Key\":\"Version\",\"Values\":[\"1\",\"2\"]}]</code>) The results of this query might include the following.</p> <ul> <li> <p>An EC2 instance that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"2\"]}</code> </p> </li> <li> <p>An S3 bucket that has the following two tags: {\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]}, and {\"Key\":\"Version\",\"Values\":[\"1\"]}</p> </li> </ul> <p>The query would not return the following results, however. The following EC2 instance does not have all tag keys specified in the filter, so it is rejected. The RDS database has all of the tag keys, but no values that match at least one of the specified tag key values in the filter.</p> <ul> <li> <p>An EC2 instance that has only the following tag: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>.</p> </li> <li> <p>An RDS database that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Archived\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"4\"]}</code> </p> </li> </ul> <p> <i> <code>CLOUDFORMATION_STACK_1_0:</code> </i> A JSON syntax that lets you specify a CloudFormation stack ARN.</p>",
                        "enum": [
                            "TAG_FILTERS_1_0",
                            "CLOUDFORMATION_STACK_1_0"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "Type",
                    "Query"
                ],
                "type": "object"
            },
            "ResourceType": {
                "pattern": "AWS::[a-zA-Z0-9]+::\\w+",
                "type": "string"
            },
            "SearchResourcesInput": {
                "properties": {
                    "MaxResults": {
                        "description": "The maximum number of group member ARNs returned by <code>SearchResources</code> in paginated output. By default, this number is 50.",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "The NextToken value that is returned in a paginated <code>SearchResources</code> request. To get the next page of results, run the call again, add the NextToken parameter, and specify the NextToken value.",
                        "type": "string"
                    },
                    "ResourceQuery": {
                        "description": "The search query, using the same formats that are supported for resource group definition.",
                        "properties": {
                            "Query": {
                                "description": "The query that defines a group or a search.",
                                "maxLength": 2048,
                                "type": "string"
                            },
                            "Type": {
                                "description": "<p>The type of the query. The valid values in this release are <code>TAG_FILTERS_1_0</code> and <code>CLOUDFORMATION_STACK_1_0</code>.</p> <p> <i> <code>TAG_FILTERS_1_0:</code> </i> A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html\">GetResources</a> operation. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches <i>any</i> of the specified values.</p> <p>For example, consider the following sample query for resources that have two tags, <code>Stage</code> and <code>Version</code>, with two values each. (<code>[{\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]},{\"Key\":\"Version\",\"Values\":[\"1\",\"2\"]}]</code>) The results of this query might include the following.</p> <ul> <li> <p>An EC2 instance that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"2\"]}</code> </p> </li> <li> <p>An S3 bucket that has the following two tags: {\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]}, and {\"Key\":\"Version\",\"Values\":[\"1\"]}</p> </li> </ul> <p>The query would not return the following results, however. The following EC2 instance does not have all tag keys specified in the filter, so it is rejected. The RDS database has all of the tag keys, but no values that match at least one of the specified tag key values in the filter.</p> <ul> <li> <p>An EC2 instance that has only the following tag: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>.</p> </li> <li> <p>An RDS database that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Archived\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"4\"]}</code> </p> </li> </ul> <p> <i> <code>CLOUDFORMATION_STACK_1_0:</code> </i> A JSON syntax that lets you specify a CloudFormation stack ARN.</p>",
                                "enum": [
                                    "TAG_FILTERS_1_0",
                                    "CLOUDFORMATION_STACK_1_0"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "Type",
                            "Query"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "ResourceQuery"
                ],
                "type": "object"
            },
            "SearchResourcesOutput": {
                "properties": {
                    "NextToken": {
                        "description": "The NextToken value to include in a subsequent <code>SearchResources</code> request, to get more results.",
                        "type": "string"
                    },
                    "QueryErrors": {
                        "description": "A list of <code>QueryError</code> objects. Each error is an object that contains <code>ErrorCode</code> and <code>Message</code> structures. Possible values for <code>ErrorCode</code> are <code>CLOUDFORMATION_STACK_INACTIVE</code> and <code>CLOUDFORMATION_STACK_NOT_EXISTING</code>.",
                        "items": {
                            "description": "A two-part error structure that can occur in <code>ListGroupResources</code> or <code>SearchResources</code> operations on CloudFormation stack-based queries. The error occurs if the CloudFormation stack on which the query is based either does not exist, or has a status that renders the stack inactive. A <code>QueryError</code> occurrence does not necessarily mean that AWS Resource Groups could not complete the operation, but the resulting group might have no member resources.",
                            "properties": {
                                "ErrorCode": {
                                    "description": "Possible values are <code>CLOUDFORMATION_STACK_INACTIVE</code> and <code>CLOUDFORMATION_STACK_NOT_EXISTING</code>.",
                                    "enum": [
                                        "CLOUDFORMATION_STACK_INACTIVE",
                                        "CLOUDFORMATION_STACK_NOT_EXISTING"
                                    ],
                                    "type": "string"
                                },
                                "Message": {
                                    "description": "A message that explains the <code>ErrorCode</code> value. Messages might state that the specified CloudFormation stack does not exist (or no longer exists). For <code>CLOUDFORMATION_STACK_INACTIVE</code>, the message typically states that the CloudFormation stack has a status that is not (or no longer) active, such as <code>CREATE_FAILED</code>.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "ResourceIdentifiers": {
                        "description": "The ARNs and resource types of resources that are members of the group that you specified.",
                        "items": {
                            "description": "The ARN of a resource, and its resource type.",
                            "properties": {
                                "ResourceArn": {
                                    "description": "The ARN of a resource.",
                                    "pattern": "arn:aws:[a-z0-9\\-]*:([a-z]{2}-[a-z]+-\\d{1})?:([0-9]{12})?:.+",
                                    "type": "string"
                                },
                                "ResourceType": {
                                    "description": "The resource type of a resource, such as <code>AWS::EC2::Instance</code>.",
                                    "pattern": "AWS::[a-zA-Z0-9]+::\\w+",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "TagInput": {
                "properties": {
                    "Tags": {
                        "description": "The tags to add to the specified resource. A tag is a string-to-string map of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "value": {
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Tags"
                ],
                "type": "object"
            },
            "TagKey": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                "type": "string"
            },
            "TagKeyList": {
                "items": {
                    "maxLength": 128,
                    "minLength": 1,
                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                    "type": "string"
                },
                "type": "array"
            },
            "TagOutput": {
                "properties": {
                    "Arn": {
                        "description": "The ARN of the tagged resource.",
                        "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "The tags that have been added to the specified resource.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                },
                                "value": {
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "TagValue": {
                "maxLength": 256,
                "minLength": 0,
                "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                "type": "string"
            },
            "Tags": {
                "items": {
                    "properties": {
                        "key": {
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                            "type": "string"
                        },
                        "value": {
                            "maxLength": 256,
                            "minLength": 0,
                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "TooManyRequestsException": {},
            "UnauthorizedException": {},
            "UntagInput": {
                "properties": {
                    "Keys": {
                        "description": "The keys of the tags to be removed.",
                        "items": {
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Keys"
                ],
                "type": "object"
            },
            "UntagOutput": {
                "properties": {
                    "Arn": {
                        "description": "The ARN of the resource from which tags have been removed.",
                        "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                        "type": "string"
                    },
                    "Keys": {
                        "description": "The keys of tags that have been removed.",
                        "items": {
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "UpdateGroupInput": {
                "properties": {
                    "Description": {
                        "description": "The description of the resource group. Descriptions can have a maximum of 511 characters, including letters, numbers, hyphens, underscores, punctuation, and spaces.",
                        "maxLength": 512,
                        "pattern": "[\\sa-zA-Z0-9_\\.-]*",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateGroupOutput": {
                "properties": {
                    "Group": {
                        "description": "The full description of the resource group after it has been updated.",
                        "properties": {
                            "Description": {
                                "description": "The description of the resource group.",
                                "maxLength": 512,
                                "pattern": "[\\sa-zA-Z0-9_\\.-]*",
                                "type": "string"
                            },
                            "GroupArn": {
                                "description": "The ARN of a resource group.",
                                "pattern": "arn:aws:resource-groups:[a-z]{2}-[a-z]+-\\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\\.-]{1,128}",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of a resource group.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[a-zA-Z0-9_\\.-]+",
                                "type": "string"
                            }
                        },
                        "required": [
                            "GroupArn",
                            "Name"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdateGroupQueryInput": {
                "properties": {
                    "ResourceQuery": {
                        "description": "The resource query that determines which AWS resources are members of the resource group.",
                        "properties": {
                            "Query": {
                                "description": "The query that defines a group or a search.",
                                "maxLength": 2048,
                                "type": "string"
                            },
                            "Type": {
                                "description": "<p>The type of the query. The valid values in this release are <code>TAG_FILTERS_1_0</code> and <code>CLOUDFORMATION_STACK_1_0</code>.</p> <p> <i> <code>TAG_FILTERS_1_0:</code> </i> A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html\">GetResources</a> operation. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches <i>any</i> of the specified values.</p> <p>For example, consider the following sample query for resources that have two tags, <code>Stage</code> and <code>Version</code>, with two values each. (<code>[{\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]},{\"Key\":\"Version\",\"Values\":[\"1\",\"2\"]}]</code>) The results of this query might include the following.</p> <ul> <li> <p>An EC2 instance that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"2\"]}</code> </p> </li> <li> <p>An S3 bucket that has the following two tags: {\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]}, and {\"Key\":\"Version\",\"Values\":[\"1\"]}</p> </li> </ul> <p>The query would not return the following results, however. The following EC2 instance does not have all tag keys specified in the filter, so it is rejected. The RDS database has all of the tag keys, but no values that match at least one of the specified tag key values in the filter.</p> <ul> <li> <p>An EC2 instance that has only the following tag: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>.</p> </li> <li> <p>An RDS database that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Archived\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"4\"]}</code> </p> </li> </ul> <p> <i> <code>CLOUDFORMATION_STACK_1_0:</code> </i> A JSON syntax that lets you specify a CloudFormation stack ARN.</p>",
                                "enum": [
                                    "TAG_FILTERS_1_0",
                                    "CLOUDFORMATION_STACK_1_0"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "Type",
                            "Query"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "ResourceQuery"
                ],
                "type": "object"
            },
            "UpdateGroupQueryOutput": {
                "properties": {
                    "GroupQuery": {
                        "description": "The resource query associated with the resource group after the update.",
                        "properties": {
                            "GroupName": {
                                "description": "The name of a resource group that is associated with a specific resource query.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[a-zA-Z0-9_\\.-]+",
                                "type": "string"
                            },
                            "ResourceQuery": {
                                "description": "The resource query which determines which AWS resources are members of the associated resource group.",
                                "properties": {
                                    "Query": {
                                        "description": "The query that defines a group or a search.",
                                        "maxLength": 2048,
                                        "type": "string"
                                    },
                                    "Type": {
                                        "description": "<p>The type of the query. The valid values in this release are <code>TAG_FILTERS_1_0</code> and <code>CLOUDFORMATION_STACK_1_0</code>.</p> <p> <i> <code>TAG_FILTERS_1_0:</code> </i> A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html\">GetResources</a> operation. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches <i>any</i> of the specified values.</p> <p>For example, consider the following sample query for resources that have two tags, <code>Stage</code> and <code>Version</code>, with two values each. (<code>[{\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]},{\"Key\":\"Version\",\"Values\":[\"1\",\"2\"]}]</code>) The results of this query might include the following.</p> <ul> <li> <p>An EC2 instance that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"2\"]}</code> </p> </li> <li> <p>An S3 bucket that has the following two tags: {\"Key\":\"Stage\",\"Values\":[\"Test\",\"Deploy\"]}, and {\"Key\":\"Version\",\"Values\":[\"1\"]}</p> </li> </ul> <p>The query would not return the following results, however. The following EC2 instance does not have all tag keys specified in the filter, so it is rejected. The RDS database has all of the tag keys, but no values that match at least one of the specified tag key values in the filter.</p> <ul> <li> <p>An EC2 instance that has only the following tag: <code>{\"Key\":\"Stage\",\"Values\":[\"Deploy\"]}</code>.</p> </li> <li> <p>An RDS database that has the following two tags: <code>{\"Key\":\"Stage\",\"Values\":[\"Archived\"]}</code>, and <code>{\"Key\":\"Version\",\"Values\":[\"4\"]}</code> </p> </li> </ul> <p> <i> <code>CLOUDFORMATION_STACK_1_0:</code> </i> A JSON syntax that lets you specify a CloudFormation stack ARN.</p>",
                                        "enum": [
                                            "TAG_FILTERS_1_0",
                                            "CLOUDFORMATION_STACK_1_0"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Type",
                                    "Query"
                                ],
                                "type": "object"
                            }
                        },
                        "required": [
                            "GroupName",
                            "ResourceQuery"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        "parameters": {
            "Action": {
                "in": "query",
                "name": "Action",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "Version": {
                "in": "query",
                "name": "Version",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Algorithm": {
                "in": "header",
                "name": "X-Amz-Algorithm",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Content-Sha256": {
                "in": "header",
                "name": "X-Amz-Content-Sha256",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Credential": {
                "in": "header",
                "name": "X-Amz-Credential",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Date": {
                "in": "header",
                "name": "X-Amz-Date",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Security-Token": {
                "in": "header",
                "name": "X-Amz-Security-Token",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Signature": {
                "in": "header",
                "name": "X-Amz-Signature",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-SignedHeaders": {
                "in": "header",
                "name": "X-Amz-SignedHeaders",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "DeleteGroupBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {},
                            "type": "object"
                        }
                    }
                },
                "required": true
            }
        },
        "securitySchemes": {
            "hmac": {
                "description": "Amazon Signature authorization v4",
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        }
    }
}